# Cache 
proxy_cache_path /etc/nginx/scache levels=1:2 keys_zone=content_cache:25m max_size=10g inactive=60m use_temp_path=off;
# proxy_cache_path /etc/nginx/scache/static levels=1:2 keys_zone=static_cache:50m max_size=10g inactive=60m use_temp_path=off;

# Map .avif or .webp to $suffix if supported by browser
map $http_accept $suffix {
    default "";
    "~*avif" ".avif";
    "~*webp" ".webp";
}

# Site
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    listen 443 default_server;
    listen [::]:443 default_server;

    http2 on;

    server_name .deltahouse.no .deltaepsilon.no *.deltaepsilon.no;

    # TODO: Serve index properly
    root /srv/deltahouse;
    index index.html;

    # Hide server info
    proxy_hide_header   X-Powered-By;
    proxy_hide_header   X-Content-Type-Options;
    server_tokens       off;
    autoindex           off;

    # Logging
    access_log on;

    # Compression
    gzip on;
    gzip_static on;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;

    # Transparently serve WebP files
    location ~* \.(png|jpe?g) {
        proxy_cache content_cache;
        proxy_cache_valid 1w;

        root /srv;

        try_files /images/$uri$suffix /deltahouse/$uri$suffix /images/$uri /deltahouse/$uri =404;
    }
    
    # Serve content from root
    location / {
        # Cache # static_cache
        # proxy_cache content_cache; # TODO: Bypass for newer bundles
        
        proxy_set_header    Host            $host;
        proxy_set_header    X-Real-IP       $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        
        try_files $uri /index.html =404;
    }

    # API
    location /v0/events {
        # Set max upload size for images
        client_max_body_size 10M;

        proxy_set_header    Host                $host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   https;
        proxy_pass_header   Content-Type;

        proxy_pass http://events:3000;
        proxy_redirect off;
    }

    location /v0/users {
        proxy_set_header    Host                $host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   https;
        proxy_pass_header   Content-Type;

        proxy_pass http://users:4000;
        proxy_redirect off;
    }
}